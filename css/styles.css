/*
 * TaskMaster: Hoja de estilos principal
 * -------------------------------------
 * Objetivos de diseño:
 * - Estética moderna, simple y legible con buena accesibilidad (alto contraste, focus-visible).
 * - Sin frameworks: solo CSS nativo con variables para facilitar mantenimiento y temas.
 * - Separar claramente estructura (HTML), comportamiento (JS) y presentación (CSS).
 *
 * Decisiones y razones:
 * - Variables CSS (custom properties) en :root para paleta, bordes, sombras y transiciones.
 * - Modo oscuro controlado por atributo [data-theme="dark"] en <html>, sincronizado desde JS.
 * - Se minimizan sombras; se priorizan bordes sutiles y espaciados compactos para claridad.
 */
:root {
    --primary-color: #2563eb; /* azul moderno */
    --primary-light: #3b82f6;
    --secondary-color: #ef4444; /* rojo claro */
    --background: #f5f7fb;
    --card-bg: #ffffff;
    --text-primary: #111827;
    --text-secondary: #6b7280;
    --border-color: #e5e7eb;
    --success-color: #16a34a;
    --warning-color: #f59e0b;
    --shadow: 0 1px 2px rgba(0, 0, 0, 0.06);
    --transition: all 0.2s ease;
}

[data-theme="dark"] {
    --background: #0b1220;
    --card-bg: #111827;
    --text-primary: #f3f4f6;
    --text-secondary: #9ca3af;
    --border-color: #1f2937;
    --shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--background);
    color: var(--text-primary);
    line-height: 1.6;
    transition: var(--transition);
    min-height: 100vh;
    padding: 1.5rem 1rem;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 1rem;
}

/* Header Styles */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding: 1rem 0;
    border-bottom: 1px solid var(--border-color);
}

.header h1 {
    font-size: 2rem;
    color: var(--primary-color);
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

/* Theme Toggle */
.theme-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 24px;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--primary-light);
    transition: var(--transition);
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 16px;
    width: 16px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: var(--transition);
    border-radius: 50%;
}

input:checked + .slider {
    background-color: var(--primary-color);
}

input:checked + .slider:before {
    transform: translateX(26px);
}

/* Add Task Container */
.add-task-container {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

#taskInput {
    flex: 1;
    padding: 0.75rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    font-size: 1rem;
    transition: var(--transition);
    background-color: var(--card-bg);
    color: var(--text-primary);
}

#taskInput:focus {
    outline: 2px solid color-mix(in srgb, var(--primary-color) 50%, transparent);
    border-color: var(--primary-color);
}

/* Button Styles */
.btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 6px;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: var(--transition);
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}
.btn-primary {
    background-color: var(--primary-color);
    color: white;
}
.btn-primary:hover {
    background-color: var(--primary-light);
}

.btn-text {
    background: none;
    color: var(--text-secondary);
    padding: 0.5rem;
}
.btn-text:hover {
    color: var(--primary-color);
    text-decoration: underline;
}

  /* Estado deshabilitado para botones */
  button:disabled,
  .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
  }

/* Filters */
.filters {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
}

.filter-btn {
    padding: 0.5rem 1rem;
    border: 1px solid var(--border-color);
    background: transparent;
    color: var(--text-primary);
    border-radius: 20px;
    cursor: pointer;
    transition: var(--transition);
}

.filter-btn:hover {
    background-color: color-mix(in srgb, var(--primary-color) 8%, transparent);
}

.filter-btn.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
}

/* Task Stats */
.task-stats {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    color: var(--text-secondary);
    font-size: 0.9rem;
}

/* Task List */
.task-list {
    list-style: none;
    margin: 0;
    padding: 0;
}

.task-item {
    background-color: var(--card-bg);
    padding: 0.875rem 1rem;
    margin-bottom: 0.75rem;
    border-radius: 8px;
    border: 1px solid var(--border-color);
    box-shadow: none;
    display: flex;
    align-items: center;
    gap: 1rem;
    animation: fadeIn 0.3s ease-out;
    transition: var(--transition);
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.task-item.completed {
    opacity: 0.7;
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: var(--text-secondary);
}

.task-checkbox {
    width: 20px;
    height: 20px;
    cursor: pointer;
    accent-color: var(--primary-color);
}

.task-text {
    flex: 1;
    word-break: break-word;
}

.task-actions {
    display: flex;
    gap: 0.5rem;
    opacity: 1; /* Siempre visibles */
    transition: var(--transition);
}

.task-item:hover .task-actions {
    opacity: 1; /* Mantener sin cambios en hover */
}

.edit-btn, .delete-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: var(--text-secondary);
    transition: var(--transition);
    padding: 0.25rem;
    border-radius: 4px;
}

.edit-btn:hover {
    color: var(--primary-color);
    background-color: rgba(74, 111, 165, 0.1);
}

.delete-btn:hover {
    color: var(--secondary-color);
    background-color: rgba(255, 107, 107, 0.1);
}

/* Notification */
.notification {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background-color: var(--card-bg);
    color: var(--text-primary);
    padding: 1rem 2rem;
    border-radius: 8px;
    border: 1px solid var(--border-color);
    transform: translateY(100px);
    opacity: 0;
    transition: var(--transition);
    z-index: 1000;
}

.notification.show {
    transform: translateY(0);
    opacity: 1;
}

/* Loading Overlay (para demostraciones Fetch/XHR) */
.loading-overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(1px);
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 1100;
}

.loading-overlay.show {
    display: flex;
}

.spinner {
    width: 28px;
    height: 28px;
    border: 3px solid color-mix(in srgb, var(--text-secondary) 40%, transparent);
    border-top-color: var(--primary-color);
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    background: transparent;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* Empty State */
.empty-state {
    text-align: center;
    padding: 3rem 1rem;
    color: var(--text-secondary);
}

.empty-state i {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

/* Responsive */
@media (max-width: 600px) {
    .add-task-container {
        flex-direction: column;
    }
    
    .btn {
        width: 100%;
        justify-content: center;
    }
    
    .filters {
        justify-content: center;
    }
}

/* Accesibilidad: resaltar elementos interactivos al navegar con teclado */
button:focus-visible,
.filter-btn:focus-visible,
.edit-btn:focus-visible,
.delete-btn:focus-visible,
input[type="text"]:focus-visible,
input[type="checkbox"]:focus-visible {
    outline: 2px solid color-mix(in srgb, var(--primary-color) 50%, transparent);
    outline-offset: 2px;
}

/* Animations */
@keyframes slideIn {
    from {
        transform: translateX(-20px);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

.btn-pulse {
    animation: pulse 2s infinite;
}
